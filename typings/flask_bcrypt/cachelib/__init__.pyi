"""
This type stub file was generated by pyright.
"""

import logging
import pickle
import typing as _t

class BaseSerializer:
    """This is the base interface for all default serializers.

    BaseSerializer.load and BaseSerializer.dump will
    default to pickle.load and pickle.dump. This is currently
    used only by FileSystemCache which dumps/loads to/from a file stream.
    """
    def dump(self, value: int, f: _t.IO, protocol: int = ...) -> None:
        ...
    
    def load(self, f: _t.BinaryIO) -> _t.Any:
        ...
    
    def dumps(self, value: _t.Any, protocol: int = ...) -> bytes:
        ...
    
    def loads(self, bvalue: bytes) -> _t.Any:
        ...
    


class UWSGISerializer(BaseSerializer):
    """Default serializer for UWSGICache."""
    ...


class SimpleSerializer(BaseSerializer):
    """Default serializer for SimpleCache."""
    ...


class FileSystemSerializer(BaseSerializer):
    """Default serializer for FileSystemCache."""
    ...


class RedisSerializer(BaseSerializer):
    """Default serializer for RedisCache."""
    def dumps(self, value: _t.Any, protocol: int = ...) -> bytes:
        """Dumps an object into a string for redis, using pickle by default."""
        ...
    
    def loads(self, value: _t.Optional[bytes]) -> _t.Any:
        """The reversal of :meth:`dump_object`. This might be called with
        None.
        """
        ...
    


class DynamoDbSerializer(RedisSerializer):
    """Default serializer for DynamoDbCache."""
    def loads(self, value: _t.Any) -> _t.Any:
        """The reversal of :meth:`dump_object`. This might be called with
        None.
        """
        ...
    


